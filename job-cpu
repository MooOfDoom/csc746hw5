#!/bin/bash -l
#SBATCH --constraint=knl
#SBATCH --cpus-per-task=1
#SBATCH --qos=debug
#SBATCH --nodes=1
#SBATCH --time=00:04:00
#SBATCH --cpu-freq=1400000
#SBATCH --job-name=job-cpu
#SBATCH --output=job-cpu.o%j
#SBATCH --error=job-cpu.e%j

# set some openmp variables: 
# OMP_PLACES=threads maps OpenMP threads to hardware threads
# OMP_PROC_BIND=spread binds threads as evenly as possible
#
# see https://docs.nersc.gov/jobs/affinity/ for more information

export OMP_PLACES=threads
export OMP_PROC_BIND=spread

# iterate over some number of threads. You will need to modify this for HW4 to reflect
# the levels of concurrency in the assignment

# Note: in HW4, we are NOT using OMP_NUM_THREADS to tell your program and OpenMP the
# concurrency level. instead, we tell likwid-perfctr the concurrency level,
# and then likwid-perfctr manages setting OMP_NUM_THREADS

for N in 1 2 4 8 16 # iterate over concurrency level
   do
   
   export OMP_NUM_THREADS=$N
   echo ========
   echo == Running with $N threads ==
   srun -n 1 ./sobel_cpu

done # iterate over concurrency level

# eof

